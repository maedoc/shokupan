name: Build and Release

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Qt6
      run: |
        sudo apt-get update
        sudo apt-get install -y qt6-base-dev qt6-base-dev-tools cmake build-essential
    
    - name: Configure CMake
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release
    
    - name: Build
      run: |
        cd build
        make -j$(nproc)
    
    - name: Package
      run: |
        cd build
        make package
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: imap-kanban-linux-x64
        path: build/*.tar.gz

  build-windows:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Qt6
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.5.0'
        host: 'windows'
        target: 'desktop'
        arch: 'win64_msvc2019_64'
        modules: 'qtnetworkauth'
    
    - name: Configure CMake
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release -G "Visual Studio 17 2022" -A x64
    
    - name: Build
      run: |
        cd build
        cmake --build . --config Release
    
    - name: Package
      run: |
        cd build
        cpack -C Release
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: imap-kanban-windows-x64
        path: build/*.zip

  build-macos:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Qt6
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.5.0'
        host: 'mac'
        target: 'desktop'
        modules: 'qtnetworkauth'
    
    - name: Configure CMake
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release
    
    - name: Build
      run: |
        cd build
        make -j$(sysctl -n hw.ncpu)
    
    - name: Package
      run: |
        cd build
        make package
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: imap-kanban-macos-x64
        path: build/*.dmg

  release:
    needs: [build-linux, build-windows, build-macos]
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
    
    - name: Upload release assets
      uses: softprops/action-gh-release@v1
      with:
        files: |
          imap-kanban-linux-x64/*
          imap-kanban-windows-x64/*
          imap-kanban-macos-x64/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
